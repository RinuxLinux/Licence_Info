#! /usr/bin/env python
#-*-coding:utf-8-*-

import sys

J = True																# joueur initial


try:
	T = int(sys.argv[1])													# taille de grille
except:
	print '\
Veuillez préciser le nombre de lignes \n\
Exemple : $ python morpion 3 \n\
pour une grille de 3x3 cases'


H = 60																	# taille de cellule
M = [T * [False] for x in range(T)]										# toutes cellules initialement libres

def joue(event) :														# handler lie a <Button-1>
	global J, M
	w = event.widget													# le widget actif
	if M[w.R][w.C] :													# cellule deja occupée
		return
	if J :
		fais_x(w)
	else :
		fais_o(w)
	s = symbole(J)														# joueur symbolique
	M[w.R][w.C] = s
	if gagnant(s) :
		info['text'] = 'joueur %s gagne' % s
		M = [T * [s] for x in range(T)]
	J = not J

def fais_x(w) :
	w.create_polygon(10, 10, 20, 10, 55, 45, 55, 55, 45, 55, 10, 20, fill = 'red')
	w.create_polygon(10, 55, 10, 45, 45, 10, 55, 10, 55, 20, 20, 55, fill = 'red')

def fais_o(w) : w.create_oval(10, 10, 55, 55, width = 10)

def symbole(j) : return ['O', 'X'][j]									# j ne peut valoir que 0 ou 1

def gagnant(s) : 
	global info
	m = []
	for x in range(T):
		m += M[x]
	for i in range(T):
		if [[M[x][y] for y in range(T)] for x in range(T)][i].count(s) is T : return True
		if [[M[x][y] for x in range(T)] for y in range(T)][i].count(s) is T : return True
	if [M[x][x] for x in range(T)].count(s) is T : return True
	if [M[x][T-x-1] for x in range(T)].count(s) is T : return True
	if False not in m :
		info ['text'] = 'GAME OVER'



# ~~~~~~~~~~~~~~  

from Tkinter import *
morpion = Tk() 
morpion.title('MORPION 1.2')											# cosmetique
grille = Frame(morpion)

for R in range(T) : 
	for C in range(T) :
		Cell = Canvas(grille, bg = 'light grey', width = H, height = H) 
		Cell.bind("<Button-1>", joue)
		Cell.grid(row = R, column = C)
		Cell.R, Cell.C = R, C											# localisation de chaque cellule

grille.pack()
stop = Button(morpion, text='ASSEZ', command = morpion.destroy)
stop.pack()
info = Label(morpion)
info.pack()
morpion.mainloop()
